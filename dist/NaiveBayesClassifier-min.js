!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():e.NaiveBayesClassifier=t()}(this,function(){"use strict";var e=function(t){this.VERSION=e.VERSION;var o=function(e){var t=new RegExp(/[^\w\s]/g),o=e.replace(t," ").toLowerCase();return o.split(/\s+/)};if(this.options={},t){if("object"!=typeof t||Array.isArray(t))throw new TypeError("NaiveBayesClassifier got invalid `options`: `"+t+"`. Please pass in an object.");this.options=t}this.tokenizer=this.options.tokenizer||o,this.vocabulary={},this.vocabularySize=0,this.categories={},this.docFrequencyCount={},this.totalNumberOfDocuments=0,this.wordFrequencyCount={},this.wordCount={}};return e.VERSION="0.1.0",e.withClassifier=function(t){if(t.VERSION!==e.VERSION)throw new Error("The classifier provided has a version number:"+t.VERSION+" that is different to the library's current version number:"+e.VERSION);var o=new e(t.options);return Object.keys(t.vocabulary).forEach(function(e){o.addWordToVocabulary(e)}),Object.keys(t.categories).forEach(function(e){o.getOrCreateCategory(e)}),o.docFrequencyCount=t.docFrequencyCount,o.totalNumberOfDocuments=t.totalNumberOfDocuments,o.wordFrequencyCount=t.wordFrequencyCount,o.wordCount=t.wordCount,o},e.prototype.addWordToVocabulary=function(e){this.vocabulary[e]||(this.vocabulary[e]=!0,this.vocabularySize+=1)},e.prototype.getOrCreateCategory=function(e){if(!e||"string"!=typeof e)throw new TypeError("Category creator got invalid category name: `"+e+"`. Please pass in a String.");return this.categories[e]||(this.docFrequencyCount[e]=0,this.wordFrequencyCount[e]={},this.wordCount[e]=0,this.categories[e]=!0),this.categories[e]?e:void 0},e.prototype.frequencyTable=function(e){var t={};return e.forEach(function(e){t[e]?t[e]+=1:t[e]=1}),t},e.prototype.learn=function(e,t){var o=this;t=o.getOrCreateCategory(t),o.docFrequencyCount[t]+=1,o.totalNumberOfDocuments+=1;var r=o.tokenizer(e),n=o.frequencyTable(r);return Object.keys(n).forEach(function(e){o.addWordToVocabulary(e);var r=n[e];o.wordFrequencyCount[t][e]?o.wordFrequencyCount[t][e]+=r:o.wordFrequencyCount[t][e]=r,o.wordCount[t]+=r}),o},e.prototype.tokenProbability=function(e,t){var o=this.wordFrequencyCount[t][e]||0,r=this.wordCount[t];return(o+1)/(r+this.vocabularySize)},e.prototype.categorize=function(e){var t=this,o=-(1/0),r=0,n={},i={},a=t.tokenizer(e),c=t.frequencyTable(a);return Object.keys(t.categories).forEach(function(e){if(t.categories[e]){var a=t.docFrequencyCount[e]/t.totalNumberOfDocuments,u=Math.log(a);Object.keys(c).forEach(function(o){var r=t.tokenProbability(o,e);u+=Math.log(r)}),a=Math.exp(u),r+=a,u>o&&(o=u,n={category:e,probability:a}),i[e]=a}}),Object.keys(i).forEach(function(e){i[e]/=r}),{category:n.category||"unclassified",probability:(n.probability/=r)||-(1/0),categories:i}},e});